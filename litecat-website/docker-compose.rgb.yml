version: '3.8'

services:
  # Main application API
  lightcat-api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: lightcat-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - REDIS_URL=redis://redis:6379
    env_file:
      - .env
    depends_on:
      - redis
      - rgb-node
    volumes:
      - ./server/logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - lightcat-network

  # UI server
  lightcat-ui:
    build:
      context: .
      dockerfile: Dockerfile.ui
    container_name: lightcat-ui
    restart: unless-stopped
    ports:
      - "8082:8082"
    environment:
      - NODE_ENV=production
      - PORT=8082
    volumes:
      - ./client:/app/client:ro
    networks:
      - lightcat-network

  # RGB Node
  rgb-node:
    image: rgbprotocol/rgb-node:latest
    container_name: rgb-node
    restart: unless-stopped
    ports:
      - "8094:8094"
    environment:
      - RGB_NETWORK=mainnet
      - RUST_LOG=info
    volumes:
      - rgb-data:/data
      - rgb-wallets:/wallets
      - ./rgb-config:/config
    networks:
      - lightcat-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: lightcat-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - lightcat-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: lightcat-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./client:/var/www/html:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      - lightcat-api
      - lightcat-ui
    networks:
      - lightcat-network

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: lightcat-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - lightcat-network

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: lightcat-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      - prometheus
    networks:
      - lightcat-network

volumes:
  rgb-data:
  rgb-wallets:
  redis-data:
  nginx-logs:
  prometheus-data:
  grafana-data:

networks:
  lightcat-network:
    driver: bridge